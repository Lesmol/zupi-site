trigger:
  branches:
    include:
      - main
  paths:
    include:
      - frontend/*

variables:
  packagePath: $(Build.ArtifactStagingDirectory)/zupi.zip
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'd3b2c9dc-7729-4cdc-8f1c-10c9a2afdb17'
  # Web app name
  webAppName: 'zupi-linux-web-app'
  # Environment name
  environmentName: 'zupi-linux-web-app'
  # Agent VM image name

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    displayName: Build stage
    jobs:
    - job: Build
      displayName: Build
      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '20.x'
          checkLatest: true
        displayName: Install Node.js
      
      - task: Npm@1
        inputs:
          command: 'ci'
          workingDir: './frontend'
        
      - script: npm run build
        displayName: Run "npm run build"
        workingDirectory: ./frontend

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/frontend/.next/standalone'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(packagePath)
          replaceExistingArchive: true
        displayName: 'Archive build output'

      - task: PublishBuildArtifacts@1
        inputs:
          ArtifactName: drop
          PathtoPublish: $(Build.ArtifactStagingDirectory)

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: succeeded()
    jobs:
    - deployment: Deploy
      displayName: Deploy
      environment: $(environmentName)
      strategy:
        runOnce:
          deploy:
            steps:
            - task: AzureRmWebAppDeployment@4
              displayName: 'Azure App Service Deploy: zupi-linux-web-app'
              inputs:
                azureSubscription: $(azureSubscription)
                appType: webAppLinux
                WebAppName: $(webAppName)
                packageForLinux: '$(Pipeline.Workspace)/drop/zupi.zip'
                RuntimeStack: 'NODE|10.10'
                StartupCommand: 'npm run start'
                ScriptType: 'Inline Script'
                InlineScript: |
                  npm install
                  npm run build --if-present