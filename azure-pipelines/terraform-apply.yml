trigger:
  branches:
    include:
      - main
  paths:
    include:
      - ./terraform/app/*

variables:
  - group: zupi-infrastructure

pool:
  vmImage: ubuntu-latest

jobs:
  - job: TerraformPlan
    displayName: Terraform Plan
    steps:
      - script: |
          az login --service-principal \
          --username $(lib-client-id) \
          --password $(lib-sp-password) \
          --tenant $(lib-tenant-id)
        workingDirectory: ./terraform/app
        displayName: Run "az login"
        
      - task: TerraformInstaller@1
        inputs:
          terraformVersion: latest
        displayName: Terraform Installer

      - script: |
          terraform init -input=false \
          -backend-config="storage_account_name=$(lib-storage-account-name)" \
          -backend-config="container_name=$(lib-container-name)" \
          -backend-config="key=$(lib-key)" \
          -backend-config="access_key=$(lib-access-key)"
        workingDirectory: ./terraform/app
        displayName: Run "terraform init"
        
      - script: |
          terraform plan -input=false -out=tfplan \
          -var="location=$(lib-location)" \
          -var="rg-name=$(lib-rg-name)"
        workingDirectory: ./terraform/app
        displayName: Run "terraform plan"

      - publish: $(Build.SourcesDirectory)/terraform/app/tfplan
        artifact: tfplan
        displayName: Publish tfplan artifact
        
  - job: Approval
    displayName: Manual Approval
    dependsOn: TerraformPlan
    pool: server
    steps:
      - task: ManualValidation@1
        displayName: Manual Validation
        timeoutInMinutes: 2
        inputs:
          notifyUsers: molemilesedi@gmail.com
          instructions: Please review the Terraform plan and approve to proceed with apply.
          onTimeout: resume
  
  - job: TerraformApply
    dependsOn: Approval
    condition: succeeded()
    displayName: Terraform Apply
    steps:
      - download: current
        artifact: tfplan
        displayName: Download tfplan artifact

      - script: |
          terraform init -input=false \
          -backend-config="storage_account_name=$(lib-storage-account-name)" \
          -backend-config="container_name=$(lib-container-name)" \
          -backend-config="key=$(lib-key)" \
          -backend-config="access_key=$(lib-access-key)"
        workingDirectory: ./terraform/app
        displayName: Run "terraform init"

      - script: |
          terraform apply -auto-approve \
          -var="location=$(lib-location)" \
          -var="rg-name=$(lib-rg-name)" \
          tfplan
        workingDirectory: ./terraform/app
        displayName: Run "terraform apply"